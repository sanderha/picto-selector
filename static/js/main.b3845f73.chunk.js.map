{"version":3,"sources":["components/AddRowBtn.js","components/PrintBtn.js","functions/utilities.js","views/pictoDoc/DocCard.js","views/pictoDoc/DocRow.js","hooks/useRevealOnHover.js","views/PictoDoc.js","views/pictoDoc/ReadOnlyDocCard.js","views/CardsBank.js","App.js","reportWebVitals.js","index.js"],"names":["AddRowBtn","addRowMethod","className","onClick","PrintBtn","window","print","createCardObj","id","name","rowId","originalId","img","incrementId","items","highestId","forEach","item","reorderItems","oldIndex","newIndex","newItem","reordered","splice","rowIdFromDroppableId","droppableId","split","cardIdFromDraggableId","draggableId","DocCard","card","deleteMethod","Card","body","CardImg","width","src","alt","DocRow","deleteCardMethod","cards","row","sharedStyles","transition","hiddenStyle","opacity","pointerEvents","visibleStyle","useState","styleObj","setBtnStyles","handleHover","handleHoverLeave","useRevealOnHover","hasCards","cardsIds","length","Row","Col","direction","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","onMouseLeave","onMouseEnter","map","cardId","i","find","index","p","sm","draggableProps","dragHandleProps","placeholder","style","PictoDoc","rows","setRowsMethod","setCardsMethod","userIsDragging","settings","deleteRow","filter","deleteCard","c","title","renderTitle","alteredRows","push","ReadOnlyDocCard","isFloating","CardsBank","isDropDisabled","Fragment","isDragging","App","docSettings","setDocSettings","setRows","setCards","setUserIsDragging","orignalCards","moveCard","sourceIndex","sourceRow","destRow","reorderedCardIds","addCardToRow","cardOriginalId","originalCard","obj","newCard","onDragEnd","result","destination","source","submittedCardOriginalId","cardOriginalIdFromDraggableId","onDragStart","Container","fluid","class","for","type","aria-describedby","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3845f73.chunk.js","sourcesContent":["export default function AddRowBtn({ addRowMethod }) {\r\n    return (\r\n        <button className=\"add-row-btn btn btn-primary\" onClick={addRowMethod}>\r\n            Add row\r\n        </button>\r\n    )\r\n}","export default function PrintBtn() {\r\n\r\n    const printDoc = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-secondary\" onClick={printDoc}>\r\n            Print!\r\n        </button>\r\n    )\r\n}","export const createRowObj = (id) => {\r\n    return {\r\n        id: id,\r\n        cardsIds: []\r\n    }\r\n}\r\n\r\nexport const createCardObj = ({ id, name, rowId, originalId, img }) => {\r\n    return {\r\n        id: id,\r\n        name: name,\r\n        rowId: rowId,\r\n        originalId: originalId,\r\n        img: img\r\n    }\r\n}\r\n\r\nexport const incrementId = (items) => {\r\n    let highestId = 0;\r\n    items.forEach(item => {\r\n        if (item.id > highestId) {\r\n            highestId = item.id;\r\n        }\r\n    })\r\n\r\n    return highestId + 1;\r\n}\r\n\r\nexport const reorderItems = (items, oldIndex, newIndex, newItem) => {\r\n    let reordered = [...items];\r\n    if(oldIndex){\r\n        reordered.splice(oldIndex, 1);\r\n    }\r\n    \r\n    reordered.splice(newIndex, 0, newItem);\r\n    return reordered;\r\n}\r\n\r\nexport const rowIdFromDroppableId = (droppableId) => {\r\n    const val = droppableId.split('row-');\r\n\r\n    return +(val[1]) || null;\r\n}\r\n\r\nexport const cardIdFromDraggableId = (draggableId) => {\r\n    const val = draggableId.split('card-');\r\n\r\n    return +(val[1]) || null;\r\n}\r\n\r\nexport const cardOriginalIdFromDraggableId = (draggableId) => {\r\n    const val = draggableId.split('card-org-id-');\r\n\r\n    return +(val[1]) || null;\r\n}","import Card from 'react-bootstrap/Card'\r\nimport CardImg from 'react-bootstrap/CardImg'\r\n\r\nexport default function DocCard({ card, deleteMethod }) {\r\n    return <Card body className=\"doc-card m-2 text-center\">\r\n        <CardImg width=\"100%\" src={`/picto/${card.img}`} alt={card.img} />\r\n        <div className=\"doc-card__delete\">\r\n            <button className=\"btn btn-sm btn-danger mt-2 \" onClick={() => deleteMethod(card)}>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    </Card>\r\n}","\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport DocCard from './DocCard'\r\nimport useRevealOnHover from '../../hooks/useRevealOnHover';\r\n\r\n\r\nexport default function DocRow({ deleteMethod, deleteCardMethod, cards, row }) {\r\n    const { styleObj, handleHover, handleHoverLeave } = useRevealOnHover();\r\n\r\n    const hasCards = () => row.cardsIds.length;\r\n\r\n    const renderCards = () => {\r\n        return row.cardsIds.map((cardId, i) => {\r\n            const card = cards.find(card => card.id === cardId);\r\n            if (!card) {\r\n                return null;\r\n            }\r\n\r\n            return <Draggable key={cardId} draggableId={'card-' + card.id} index={i}>\r\n                {(p) => {\r\n                    return <Col\r\n                        sm=\"auto\"\r\n                        {...p.draggableProps}\r\n                        {...p.dragHandleProps}\r\n                        ref={p.innerRef}\r\n                        className=\"doc-row-col flex-shrink-1\"\r\n                    >\r\n                        <DocCard deleteMethod={deleteCardMethod} card={card} />\r\n                    </Col>\r\n                }}\r\n            </Draggable>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n\r\n                <Droppable droppableId={`row-${row.id}`} direction=\"horizontal\">\r\n                    {(provided, snapshot) => {\r\n                        return (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className={`doc-row card mb-2${snapshot.isDraggingOver ? \" doc-row--is-dragged-over\" : \"\"}${!hasCards() ? \" doc-row--is-empty\" : \"\"}`}\r\n                                onMouseLeave={handleHoverLeave}\r\n                                onMouseEnter={handleHover}\r\n                            >\r\n                                <Row className={`no-gutters flex-nowrap`}>\r\n                                    {renderCards()}\r\n                                    {provided.placeholder}\r\n                                    {!hasCards() && <div className=\"doc-row__empty-text\">Drag pictures here!</div>}\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"text-right\">\r\n                                        <button onClick={() => deleteMethod(row.id)} className=\"btn-danger btn btn-sm doc-row-delete\" style={styleObj}>\r\n                                            Delete row\r\n                                        </button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        )\r\n                    }}\r\n                </Droppable>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import {useState} from 'react'\r\n\r\nexport default function useRevealOnHover(){\r\n    const sharedStyles = {\r\n        transition: '.25s ease'\r\n    }\r\n\r\n    const hiddenStyle = {\r\n        ...sharedStyles,\r\n        opacity: 0,\r\n        pointerEvents: 'none'\r\n    }\r\n\r\n    const visibleStyle = {\r\n        ...sharedStyles,\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    }\r\n    const [styleObj, setBtnStyles] = useState(visibleStyle);\r\n\r\n\r\n\r\n    const handleHover = () => {\r\n        setBtnStyles(visibleStyle);\r\n    }\r\n\r\n    const handleHoverLeave = () => {\r\n        setBtnStyles(hiddenStyle);\r\n    }\r\n\r\n    return {styleObj, handleHover, handleHoverLeave};\r\n}","import AddRowBtn from \"../components/AddRowBtn\";\r\nimport PrintBtn from \"../components/PrintBtn\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { createRowObj, incrementId } from \"../functions/utilities\";\r\nimport DocRow from \"./pictoDoc/DocRow\";\r\n\r\nexport default function PictoDoc({ rows, cards, setRowsMethod, setCardsMethod, userIsDragging, settings }) {\r\n\r\n    const handleAddRow = () => {\r\n        const alteredRows = [...rows];\r\n        alteredRows.push(createRowObj(incrementId(rows)));\r\n        setRowsMethod(alteredRows);\r\n    }\r\n\r\n    const deleteRow = (rowId) => {\r\n        setRowsMethod(rows.filter(row => row.id !== rowId))\r\n        setCardsMethod(cards.filter(card => card.rowId !== rowId));\r\n    }\r\n\r\n    const deleteCard = (card) => {\r\n        // remove card from row\r\n        const row = rows.find(row => row.id === card.rowId);\r\n        row.cardsIds = row.cardsIds.filter(item => item !== card.id);\r\n        // remove card\r\n        setCardsMethod(cards.filter(c => c.id !== card.id))\r\n    }\r\n\r\n    const rowCards = (rowId) => cards.filter(card => rowId === card.rowId)\r\n\r\n    const renderTitle = () => {\r\n        if (!settings.title) return;\r\n\r\n        return <Row>\r\n            <Col>\r\n                <h1 className=\"doc-title\">{settings.title}</h1>\r\n            </Col>\r\n        </Row>\r\n    }\r\n\r\n    return (\r\n        <div className={`doc${userIsDragging ? \" doc--is-dragging\" : \"\"}`}>\r\n            {renderTitle()}\r\n            {rows.map((row, i) => <DocRow key={i} row={row} deleteCardMethod={deleteCard} deleteMethod={deleteRow} cards={rowCards(row.id)} />)}\r\n            <div className=\"text-center\">\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col className=\"col-md-auto\">\r\n                        <AddRowBtn addRowMethod={handleAddRow} />\r\n                    </Col>\r\n                    <Col className=\"col-md-auto\">\r\n                        <PrintBtn />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Card from 'react-bootstrap/Card'\r\nimport CardImg from 'react-bootstrap/CardImg'\r\n\r\nexport default function ReadOnlyDocCard({ card, isFloating }) {\r\n\r\n    return <Card body className={`bg-primary doc-card doc-card--read-only doc-card--small text-center ${isFloating ? \"doc-card--floating\" : \"\"}`}>\r\n        <CardImg width=\"100%\" src={`/picto/${card.img}`} alt={card.img} />\r\n    </Card>\r\n}","import React from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport ReadOnlyDocCard from './pictoDoc/ReadOnlyDocCard'\r\n\r\nexport default function CardsBank({ cards, userIsDragging }) {\r\n\r\n    return (\r\n        <div className={`cards-bank ${userIsDragging ? \"cards-bank--dragging\" : \"\"}`}>\r\n\r\n            <Droppable isDropDisabled={true} droppableId=\"card-bank-droppable\">\r\n                {(provided, snapshot) => {\r\n                    return <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                        <Row>\r\n                            {cards.map((card, i) => {\r\n                                return (\r\n                                    <Col sm=\"auto\" key={i} >\r\n                                        <Draggable draggableId={'card-org-id-' + card.originalId} index={i}>\r\n                                            {(provided, snapshot) => {\r\n                                                return <React.Fragment>\r\n                                                    <div\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        ref={provided.innerRef}\r\n                                                    >\r\n                                                        <ReadOnlyDocCard isFloating={snapshot.isDragging} card={card} />\r\n\r\n                                                    </div>\r\n                                                    {snapshot.isDragging && (\r\n                                                        <div><ReadOnlyDocCard card={card} /></div>\r\n                                                    )}\r\n                                                </React.Fragment>\r\n                                            }}\r\n                                        </Draggable>\r\n\r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </Row>\r\n                    </div>\r\n                }}\r\n\r\n            </Droppable>\r\n\r\n        </div>\r\n    )\r\n}","import './App.scss';\r\n\r\nimport { useState } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport PictoDoc from './views/PictoDoc';\r\nimport CardsBank from './views/CardsBank';\r\nimport { rowIdFromDroppableId, cardIdFromDraggableId, cardOriginalIdFromDraggableId, incrementId, createCardObj, reorderItems } from './functions/utilities'\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n    const [docSettings, setDocSettings] = useState({\r\n        title: null\r\n    });\r\n    const [rows, setRows] = useState([\r\n        { id: 1, cardsIds: [] }, { id: 2, cardsIds: [] }, { id: 3, cardsIds: [] }\r\n    ]);\r\n    const [cards, setCards] = useState([]);\r\n    const [userIsDragging, setUserIsDragging] = useState(false);\r\n\r\n    const orignalCards = [\r\n        createCardObj({ name: \"card1\", originalId: 1, img: \"putonclothes_c_l.jpg\" }),\r\n        createCardObj({ name: \"card2\", originalId: 2, img: \"putoncoat_c_l.jpg\" }),\r\n        createCardObj({ name: \"card3\", originalId: 3, img: \"putondress_c_l.jpg\" }),\r\n        createCardObj({ name: \"card4\", originalId: 4, img: \"putonshoes_c_l.jpg\" }),\r\n    ];\r\n\r\n    const onDragStart = () => {\r\n        setUserIsDragging(true);\r\n    }\r\n\r\n    const onDragEnd = (result) => {\r\n        setUserIsDragging(false);\r\n\r\n        const { destination, source, draggableId } = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        // if came from row, remove that from the row\r\n        if (destination.droppableId === 'card-bank-droppable') {\r\n            const cardId = cardIdFromDraggableId(draggableId);\r\n            setCards(cards.filter(card => card.id !== cardId))\r\n\r\n            return;\r\n        }\r\n        if (source && source.droppableId !== 'card-bank-droppable') {\r\n            // from another row\r\n            const cardId = cardIdFromDraggableId(draggableId);\r\n            const rowId = rowIdFromDroppableId(destination.droppableId);\r\n            moveCard(rowId, cardId, destination.index, source.index);\r\n            return;\r\n        }\r\n        const submittedCardOriginalId = cardOriginalIdFromDraggableId(draggableId);\r\n        const rowId = rowIdFromDroppableId(destination.droppableId);\r\n        addCardToRow(rowId, submittedCardOriginalId, destination.index, source.index);\r\n    }\r\n\r\n    const moveCard = (rowId, cardId, index, sourceIndex) => {\r\n        let card = cards.find(c => c.id === cardId);\r\n        const sourceRow = rows.find(row => row.id === card.rowId);\r\n        const destRow = rows.find(row => row.id === rowId);\r\n        // remove item from source row\r\n        sourceRow.cardsIds.splice(sourceIndex, 1);\r\n        // set new row id\r\n        card.rowId = rowId;\r\n        const reorderedCardIds = reorderItems(destRow.cardsIds, null, index, card.id);\r\n        destRow.cardsIds = reorderedCardIds;\r\n    }\r\n\r\n    const addCardToRow = (rowId, cardOriginalId, index, sourceIndex) => {\r\n        const originalCard = orignalCards.find(card => card.originalId === cardOriginalId);\r\n        const row = rows.find(obj => obj.id === rowId);\r\n        let newCard = { ...originalCard };\r\n        newCard.id = incrementId(cards);\r\n        newCard.rowId = rowId;\r\n        const reorderedCardIds = reorderItems(row.cardsIds, null, index, newCard.id);\r\n        row.cardsIds = reorderedCardIds;\r\n        setCards([...cards, newCard]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"picto-app\">\r\n            <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\r\n                <Container fluid className=\"p-3\">\r\n                    <Row>\r\n                        <Col className={`settings-pane ${userIsDragging ? \"settings-pane--disabled\" : \"\"}`} sm={4}>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"title\">Document title</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Enter title\" value={docSettings.title} onChange={e => setDocSettings({ ...docSettings, title: e.target.value })} />\r\n                                <small id=\"titleHelp\" class=\"form-text text-muted\">This title will appear at the top of the document</small>\r\n                            </div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <hr />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-4\">\r\n                                <Col>\r\n                                    <CardsBank cards={orignalCards} userIsDragging={userIsDragging} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"picto-doc-wrapper-col\">\r\n                            <PictoDoc settings={docSettings} userIsDragging={userIsDragging} setCardsMethod={setCards} setRowsMethod={setRows} rows={rows} cards={cards} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}